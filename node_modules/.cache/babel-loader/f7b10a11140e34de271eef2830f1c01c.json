{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\m_obr\\\\OneDrive\\\\Documents\\\\GitHub\\\\TEST\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\m_obr\\\\OneDrive\\\\Documents\\\\GitHub\\\\TEST\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"C:\\\\Users\\\\m_obr\\\\OneDrive\\\\Documents\\\\GitHub\\\\TEST\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\m_obr\\\\OneDrive\\\\Documents\\\\GitHub\\\\TEST\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\m_obr\\\\OneDrive\\\\Documents\\\\GitHub\\\\TEST\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\m_obr\\\\OneDrive\\\\Documents\\\\GitHub\\\\TEST\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";/*\r\n *   Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n\r\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\r\n *  You may not use this file except in compliance with the License.\r\n *  A copy of the License is located at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n *  or in the \"license\" file accompanying this file. This file is distributed\r\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\r\n *  express or implied. See the License for the specific language governing\r\n *  permissions and limitations under the License.\r\n */import React from'react';import BaseMap from'../components/BaseMap';import ESRIMap from'../components/ESRIMap';import Amplify from'aws-amplify';import{Auth,API}from'aws-amplify';import awsConfig from'../amplify-config';import'../css/ride.css';var apiName='WildRydesAPI';var apiPath='/ride';var MainApp=/*#__PURE__*/function(_React$Component){_inherits(MainApp,_React$Component);var _super=_createSuper(MainApp);function MainApp(props){var _this;_classCallCheck(this,MainApp);_this=_super.call(this,props);_this.state={authToken:null,idToken:null,requestRideEnabled:false,updates:['Welcome! Click the map to set your pickup location.']};return _this;}_createClass(MainApp,[{key:\"componentDidMount\",value:function(){var _componentDidMount=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var session;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return Auth.currentSession();case 2:session=_context.sent;this.setState({authToken:session.accessToken.jwtToken});this.setState({idToken:session.idToken.jwtToken});case 5:case\"end\":return _context.stop();}}},_callee,this);}));function componentDidMount(){return _componentDidMount.apply(this,arguments);}return componentDidMount;}()/**\r\n   * Determines if the API is enabled\r\n   *\r\n   * @return {Boolean} true if API is configured\r\n   */},{key:\"hasApi\",value:function hasApi(){var api=awsConfig.API.endpoints.filter(function(v){return v.endpoint!=='';});return typeof api!=='undefined';}/**\r\n   * Calls the backend API to retrieve the Unicorn data\r\n   *\r\n   * @param {Number} latitude\r\n   * @param {Number} longitude\r\n   */},{key:\"getData\",value:function(){var _getData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(pin){var apiRequest;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:apiRequest={body:{PickupLocation:{Longitude:pin.longitude,Latitude:pin.latitude}},headers:{'Authorization':this.state.idToken,'Content-Type':'application/json'}};console.log('API Request:',apiRequest);_context2.next=4;return API.post(apiName,apiPath,apiRequest);case 4:return _context2.abrupt(\"return\",_context2.sent);case 5:case\"end\":return _context2.stop();}}},_callee2,this);}));function getData(_x){return _getData.apply(this,arguments);}return getData;}()/**\r\n   * Called when Request Ride is called\r\n   */},{key:\"onClick\",value:function(){var _onClick=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var _this2=this;var updates,data;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(this.state.pin){_context3.next=3;break;}console.error('No pin present - skipping');return _context3.abrupt(\"return\",true);case 3:updates=['Requesting Unicorn'];_context3.prev=4;this.setState({requestRideEnabled:false,updates:updates});_context3.next=8;return this.getData(this.state.pin);case 8:data=_context3.sent;console.log(data);updates.push([\"Your unicorn, \".concat(data.Unicorn.Name,\" will be with you in \").concat(data.Eta)]);this.setState({updates:updates});// Let's fake the arrival\nsetTimeout(function(){console.log('Ride Complete');var updateList=_this2.state.updates;updateList.push([\"\".concat(data.Unicorn.Name,\" has arrived\")]);_this2.setState({updates:updateList,requestRideEnabled:false,pin:null});},data.Eta*1000);_context3.next=20;break;case 15:_context3.prev=15;_context3.t0=_context3[\"catch\"](4);console.error(_context3.t0);updates.push(['Error finding unicorn']);this.setState({updates:updates});case 20:case\"end\":return _context3.stop();}}},_callee3,this,[[4,15]]);}));function onClick(){return _onClick.apply(this,arguments);}return onClick;}()/**\r\n   * Called when the mapClick happens\r\n   * @param {Point} position the position of the map pin\r\n   */},{key:\"onMapClick\",value:function onMapClick(position){console.log(\"onMapClick(\".concat(JSON.stringify(position),\")\"));this.setState({pin:position,requestRideEnabled:true});}},{key:\"render\",value:function render(){var _this3=this;var hasApi=this.hasApi();// If API is not configured, but auth is, then output the\n// token.\nif(!hasApi){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(BaseMap,null),/*#__PURE__*/React.createElement(\"div\",{className:\"configMessage\"},/*#__PURE__*/React.createElement(\"div\",{className:\"backdrop\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"panel panel-default\"},/*#__PURE__*/React.createElement(\"div\",{className:\"panel-heading\"},/*#__PURE__*/React.createElement(\"h3\",{className:\"panel-title\"},\"Successfully Authenticated!\")),/*#__PURE__*/React.createElement(\"div\",{className:\"panel-body\"},/*#__PURE__*/React.createElement(\"p\",null,\"This page is not functional yet because there is no API configured.\"),/*#__PURE__*/React.createElement(\"p\",null,\"Here is your user's identity token:\"),/*#__PURE__*/React.createElement(\"p\",{className:\"idToken\"},this.state.idToken)))));}// If the API is configured, then display the \"requestUnicorn\"\n// button.  If data is available (i.e. unicorn is requested),\n// then display the additional patterns (unicorn on map).\nvar updateList=this.state.updates.map(function(v,i){return/*#__PURE__*/React.createElement(\"li\",{key:i},v);});return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"info panel panel-default\"},/*#__PURE__*/React.createElement(\"div\",{className:\"panel-heading\"},/*#__PURE__*/React.createElement(\"button\",{id:\"request\",className:\"btn btn-primary\",disabled:!this.state.requestRideEnabled,onClick:function onClick(){return _this3.onClick();}},\"Request\")),/*#__PURE__*/React.createElement(\"div\",{className:\"panel-body\"},/*#__PURE__*/React.createElement(\"ol\",{id:\"updates\"},updateList))),/*#__PURE__*/React.createElement(\"div\",{id:\"main\"},/*#__PURE__*/React.createElement(ESRIMap,{onMapClick:function onMapClick(position){_this3.onMapClick(position);}})));}}]);return MainApp;}(React.Component);export default MainApp;","map":{"version":3,"sources":["C:/Users/m_obr/OneDrive/Documents/GitHub/TEST/src/pages/MainApp.js"],"names":["React","BaseMap","ESRIMap","Amplify","Auth","API","awsConfig","apiName","apiPath","MainApp","props","state","authToken","idToken","requestRideEnabled","updates","currentSession","session","setState","accessToken","jwtToken","api","endpoints","filter","v","endpoint","pin","apiRequest","body","PickupLocation","Longitude","longitude","Latitude","latitude","headers","console","log","post","error","getData","data","push","Unicorn","Name","Eta","setTimeout","updateList","position","JSON","stringify","hasApi","map","i","onClick","onMapClick","Component"],"mappings":"ugCAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,uBAApB,CACA,MAAOC,CAAAA,OAAP,KAAoB,uBAApB,CACA,MAAOC,CAAAA,OAAP,KAAoB,aAApB,CACA,OAASC,IAAT,CAAeC,GAAf,KAA0B,aAA1B,CACA,MAAOC,CAAAA,SAAP,KAAsB,mBAAtB,CACA,MAAO,iBAAP,CAEA,GAAMC,CAAAA,OAAO,CAAG,cAAhB,CACA,GAAMC,CAAAA,OAAO,CAAG,OAAhB,C,GAEMC,CAAAA,O,8GACJ,iBAAYC,KAAZ,CAAmB,yCACjB,uBAAMA,KAAN,EACA,MAAKC,KAAL,CAAa,CACXC,SAAS,CAAE,IADA,CAEXC,OAAO,CAAE,IAFE,CAGXC,kBAAkB,CAAE,KAHT,CAIXC,OAAO,CAAE,CACP,qDADO,CAJE,CAAb,CAFiB,aAUlB,C,+IAED,qKACwBX,CAAAA,IAAI,CAACY,cAAL,EADxB,QACQC,OADR,eAEE,KAAKC,QAAL,CAAc,CAAEN,SAAS,CAAEK,OAAO,CAACE,WAAR,CAAoBC,QAAjC,CAAd,EACA,KAAKF,QAAL,CAAc,CAAEL,OAAO,CAAEI,OAAO,CAACJ,OAAR,CAAgBO,QAA3B,CAAd,EAHF,2D,6GAMA;AACF;AACA;AACA;AACA,K,sBACE,iBAAS,CACP,GAAMC,CAAAA,GAAG,CAAGf,SAAS,CAACD,GAAV,CAAciB,SAAd,CAAwBC,MAAxB,CAA+B,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACC,QAAF,GAAe,EAAnB,EAAhC,CAAZ,CACA,MAAQ,OAAOJ,CAAAA,GAAP,GAAe,WAAvB,CACD,CAED;AACF;AACA;AACA;AACA;AACA,K,uGACE,kBAAcK,GAAd,qIACQC,UADR,CACqB,CACfC,IAAI,CAAE,CACNC,cAAc,CAAE,CACZC,SAAS,CAAEJ,GAAG,CAACK,SADH,CAEZC,QAAQ,CAAEN,GAAG,CAACO,QAFF,CADV,CADS,CAOfC,OAAO,CAAE,CACT,gBAAiB,KAAKvB,KAAL,CAAWE,OADnB,CAET,eAAgB,kBAFP,CAPM,CADrB,CAaEsB,OAAO,CAACC,GAAR,CAAY,cAAZ,CAA4BT,UAA5B,EAbF,uBAcetB,CAAAA,GAAG,CAACgC,IAAJ,CAAS9B,OAAT,CAAkBC,OAAlB,CAA2BmB,UAA3B,CAdf,sH,iFAiBA;AACF;AACA,K,uGACE,4KACO,KAAKhB,KAAL,CAAWe,GADlB,0BAEIS,OAAO,CAACG,KAAR,CAAc,2BAAd,EAFJ,iCAGW,IAHX,SAMQvB,OANR,CAMkB,CAAE,oBAAF,CANlB,kBAQI,KAAKG,QAAL,CAAc,CACZJ,kBAAkB,CAAE,KADR,CAEZC,OAAO,CAAPA,OAFY,CAAd,EARJ,uBAYuB,MAAKwB,OAAL,CAAa,KAAK5B,KAAL,CAAWe,GAAxB,CAZvB,QAYUc,IAZV,gBAaIL,OAAO,CAACC,GAAR,CAAYI,IAAZ,EACAzB,OAAO,CAAC0B,IAAR,CAAa,yBAAmBD,IAAI,CAACE,OAAL,CAAaC,IAAhC,iCAA4DH,IAAI,CAACI,GAAjE,EAAb,EACA,KAAK1B,QAAL,CAAc,CAAEH,OAAO,CAAPA,OAAF,CAAd,EAEA;AACA8B,UAAU,CAAC,UAAM,CACfV,OAAO,CAACC,GAAR,CAAY,eAAZ,EACA,GAAMU,CAAAA,UAAU,CAAG,MAAI,CAACnC,KAAL,CAAWI,OAA9B,CACA+B,UAAU,CAACL,IAAX,CAAgB,WAAKD,IAAI,CAACE,OAAL,CAAaC,IAAlB,iBAAhB,EACA,MAAI,CAACzB,QAAL,CAAc,CACZH,OAAO,CAAE+B,UADG,CAEZhC,kBAAkB,CAAE,KAFR,CAGZY,GAAG,CAAE,IAHO,CAAd,EAKD,CATS,CASPc,IAAI,CAACI,GAAL,CAAW,IATJ,CAAV,CAlBJ,qFA6BIT,OAAO,CAACG,KAAR,eACAvB,OAAO,CAAC0B,IAAR,CAAa,CAAE,uBAAF,CAAb,EACA,KAAKvB,QAAL,CAAc,CAAEH,OAAO,CAAPA,OAAF,CAAd,EA/BJ,uE,+EAmCA;AACF;AACA;AACA,K,0BACE,oBAAWgC,QAAX,CAAqB,CACnBZ,OAAO,CAACC,GAAR,sBAA0BY,IAAI,CAACC,SAAL,CAAeF,QAAf,CAA1B,OACA,KAAK7B,QAAL,CAAc,CAAEQ,GAAG,CAAEqB,QAAP,CAAiBjC,kBAAkB,CAAE,IAArC,CAAd,EACD,C,sBAED,iBAAS,iBACP,GAAMoC,CAAAA,MAAM,CAAG,KAAKA,MAAL,EAAf,CAEA;AACA;AACA,GAAI,CAACA,MAAL,CAAa,CACX,mBACE,4CACE,oBAAC,OAAD,MADF,cAEE,2BAAK,SAAS,CAAC,eAAf,eACE,2BAAK,SAAS,CAAC,UAAf,EADF,cAEE,2BAAK,SAAS,CAAC,qBAAf,eACE,2BAAK,SAAS,CAAC,eAAf,eACE,0BAAI,SAAS,CAAC,aAAd,gCADF,CADF,cAIE,2BAAK,SAAS,CAAC,YAAf,eACE,mGADF,cAEE,mEAFF,cAGE,yBAAG,SAAS,CAAC,SAAb,EAAwB,KAAKvC,KAAL,CAAWE,OAAnC,CAHF,CAJF,CAFF,CAFF,CADF,CAkBD,CAED;AACA;AACA;AACA,GAAMiC,CAAAA,UAAU,CAAG,KAAKnC,KAAL,CAAWI,OAAX,CAAmBoC,GAAnB,CACjB,SAAC3B,CAAD,CAAI4B,CAAJ,qBAAU,0BAAI,GAAG,CAAEA,CAAT,EAAa5B,CAAb,CAAV,EADiB,CAAnB,CAGA,mBACE,4CACE,2BAAK,SAAS,CAAC,0BAAf,eACE,2BAAK,SAAS,CAAC,eAAf,eACE,8BAAQ,EAAE,CAAC,SAAX,CAAqB,SAAS,CAAC,iBAA/B,CAAiD,QAAQ,CAAE,CAAC,KAAKb,KAAL,CAAWG,kBAAvE,CAA2F,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACuC,OAAL,EAAN,EAApG,YADF,CADF,cAIE,2BAAK,SAAS,CAAC,YAAf,eACE,0BAAI,EAAE,CAAC,SAAP,EAAkBP,UAAlB,CADF,CAJF,CADF,cASE,2BAAK,EAAE,CAAC,MAAR,eACE,oBAAC,OAAD,EAAS,UAAU,CAAE,oBAACC,QAAD,CAAc,CAAE,MAAI,CAACO,UAAL,CAAgBP,QAAhB,EAA4B,CAAjE,EADF,CATF,CADF,CAeD,C,qBAlJmB/C,KAAK,CAACuD,S,EAqJ5B,cAAe9C,CAAAA,OAAf","sourcesContent":["/*\r\n *   Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n\r\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\r\n *  You may not use this file except in compliance with the License.\r\n *  A copy of the License is located at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n *  or in the \"license\" file accompanying this file. This file is distributed\r\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\r\n *  express or implied. See the License for the specific language governing\r\n *  permissions and limitations under the License.\r\n */\r\nimport React from 'react';\r\nimport BaseMap from '../components/BaseMap';\r\nimport ESRIMap from '../components/ESRIMap';\r\nimport Amplify from 'aws-amplify';\r\nimport { Auth, API } from 'aws-amplify';\r\nimport awsConfig from '../amplify-config';\r\nimport '../css/ride.css';\r\n\r\nconst apiName = 'WildRydesAPI';\r\nconst apiPath = '/ride';\r\n\r\nclass MainApp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      authToken: null,\r\n      idToken: null,\r\n      requestRideEnabled: false,\r\n      updates: [\r\n        'Welcome! Click the map to set your pickup location.'\r\n      ]\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const session = await Auth.currentSession();\r\n    this.setState({ authToken: session.accessToken.jwtToken });\r\n    this.setState({ idToken: session.idToken.jwtToken });\r\n  }\r\n\r\n  /**\r\n   * Determines if the API is enabled\r\n   *\r\n   * @return {Boolean} true if API is configured\r\n   */\r\n  hasApi() {\r\n    const api = awsConfig.API.endpoints.filter(v => v.endpoint !== '');                                                   \r\n    return (typeof api !== 'undefined');\r\n  }\r\n\r\n  /**\r\n   * Calls the backend API to retrieve the Unicorn data\r\n   *\r\n   * @param {Number} latitude\r\n   * @param {Number} longitude\r\n   */\r\n  async getData(pin) {\r\n    const apiRequest = {\r\n        body: {\r\n        PickupLocation: {\r\n            Longitude: pin.longitude,\r\n            Latitude: pin.latitude\r\n        }\r\n        },\r\n        headers: {\r\n        'Authorization': this.state.idToken,\r\n        'Content-Type': 'application/json'\r\n        }\r\n    };\r\n    console.log('API Request:', apiRequest);\r\n    return await API.post(apiName, apiPath, apiRequest);\r\n}\r\n\r\n  /**\r\n   * Called when Request Ride is called\r\n   */\r\n  async onClick() {\r\n    if (!this.state.pin) {\r\n      console.error('No pin present - skipping');\r\n      return true;\r\n    }\r\n\r\n    const updates = [ 'Requesting Unicorn' ];\r\n    try {\r\n      this.setState({\r\n        requestRideEnabled: false,\r\n        updates\r\n      });\r\n      const data = await this.getData(this.state.pin);\r\n      console.log(data);\r\n      updates.push([ `Your unicorn, ${data.Unicorn.Name} will be with you in ${data.Eta}` ]);\r\n      this.setState({ updates });\r\n\r\n      // Let's fake the arrival\r\n      setTimeout(() => {\r\n        console.log('Ride Complete');\r\n        const updateList = this.state.updates;\r\n        updateList.push([ `${data.Unicorn.Name} has arrived` ]);\r\n        this.setState({\r\n          updates: updateList,\r\n          requestRideEnabled: false,\r\n          pin: null\r\n        });\r\n      }, data.Eta * 1000);\r\n    } catch (err) {\r\n      console.error(err);\r\n      updates.push([ 'Error finding unicorn' ]);\r\n      this.setState({ updates });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called when the mapClick happens\r\n   * @param {Point} position the position of the map pin\r\n   */\r\n  onMapClick(position) {\r\n    console.log(`onMapClick(${JSON.stringify(position)})`);\r\n    this.setState({ pin: position, requestRideEnabled: true });\r\n  }\r\n\r\n  render() {\r\n    const hasApi = this.hasApi();\r\n\r\n    // If API is not configured, but auth is, then output the\r\n    // token.\r\n    if (!hasApi) {\r\n      return (\r\n        <div>\r\n          <BaseMap/>\r\n          <div className=\"configMessage\">\r\n            <div className=\"backdrop\"></div>\r\n            <div className=\"panel panel-default\">\r\n              <div className=\"panel-heading\">\r\n                <h3 className=\"panel-title\">Successfully Authenticated!</h3>\r\n              </div>\r\n              <div className=\"panel-body\">\r\n                <p>This page is not functional yet because there is no API configured.</p>\r\n                <p>Here is your user's identity token:</p>\r\n                <p className=\"idToken\">{this.state.idToken}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    // If the API is configured, then display the \"requestUnicorn\"\r\n    // button.  If data is available (i.e. unicorn is requested),\r\n    // then display the additional patterns (unicorn on map).\r\n    const updateList = this.state.updates.map(\r\n      (v, i) => <li key={i}>{v}</li>\r\n    );\r\n    return (\r\n      <div>\r\n        <div className=\"info panel panel-default\">\r\n          <div className=\"panel-heading\">\r\n            <button id=\"request\" className=\"btn btn-primary\" disabled={!this.state.requestRideEnabled} onClick={() => this.onClick()}>Request</button>\r\n          </div>\r\n          <div className=\"panel-body\">\r\n            <ol id=\"updates\">{updateList}</ol>\r\n          </div>\r\n        </div>\r\n        <div id=\"main\">\r\n          <ESRIMap onMapClick={(position) => { this.onMapClick(position); }}/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainApp;\r\n"]},"metadata":{},"sourceType":"module"}